name: buildx

on:
  push:
    branches:
      - 'main'
  workflow_dispatch:
  schedule:
    - cron: "45 */6 * * *"

env:
  IMAGE_NAME: ghcr.io/by275/adguardhome

jobs:
  buildx:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        build: [latest, beta]
    steps:
      -
        name: Check if buildx required
        run: |
          if [ $GITHUB_EVENT_NAME != "schedule" ]; then
            echo "X_SKIP=false" >> $GITHUB_ENV
            exit 0
          fi
          docker run -i --entrypoint=/bin/cp -v ${PWD}:/abc adguard/adguardhome:${{ matrix.build }} \
            /opt/adguardhome/AdGuardHome /abc/bin1
          docker run -i --entrypoint=/bin/cp -v ${PWD}:/abc ${{ env.IMAGE_NAME }}:${{ matrix.build }} \
            /usr/local/bin/AdGuardHome /abc/bin2
          if ! cmp -s bin1 bin2 ; then echo "X_SKIP=false" >> $GITHUB_ENV ; exit 0 ; fi
          echo "X_SKIP=true" >> $GITHUB_ENV
      -
        name: Checkout
        if: env.X_SKIP == 'false'
        uses: actions/checkout@v4
      -
        name: Set up QEMU
        if: env.X_SKIP == 'false'
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Buildx
        if: env.X_SKIP == 'false'
        uses: docker/setup-buildx-action@v3
      -
        name: Build Unbound
        if: env.X_SKIP == 'false'
        run: |
          docker buildx build \
            -f unbound.dockerfile \
            --build-arg ARCH=amd64 \
            --output=type=tar,dest=unbound-amd64.tar.gz \
            .
          docker buildx build \
            -f unbound.dockerfile \
            --build-arg ARCH=arm64 \
            --output=type=tar,dest=unbound-arm64.tar.gz \
            .
      -
        name: Initial Buildx
        if: env.X_SKIP == 'false'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          tags: ${{ env.IMAGE_NAME }}:testing
          platforms: linux/amd64,linux/arm64
          build-args: |
            AGH_BUILD=${{ matrix.build }}
      -
        name: Load Built Image and Get Variables
        if: env.X_SKIP == 'false'
        run: |
          docker buildx build \
            -t ${{ env.IMAGE_NAME }}:testing \
            --platform=linux/amd64 \
            --build-arg AGH_BUILD=${{ matrix.build }} \
            --load \
            .
          CID=$(docker run -d ${{ env.IMAGE_NAME }}:testing)
          VER=$(docker exec $CID AdGuardHome --version | awk '{print $NF}' | cut -d'+' -f1)
          docker rm -f $CID
          echo "APP_VER=$VER" >> $GITHUB_ENV
      -
        name: Login to ghcr.io
        if: env.X_SKIP == 'false'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Buildx and Push
        if: env.X_SKIP == 'false'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          tags: |
            ${{ env.IMAGE_NAME }}:${{ matrix.build }}
            ${{ env.IMAGE_NAME }}:${{ env.APP_VER }}
          platforms: linux/amd64,linux/arm64
          build-args: |
            AGH_BUILD=${{ matrix.build }}
          push: true
      -
        name: Notification
        uses: sarisia/actions-status-discord@v1
        if: env.X_SKIP == 'false' && always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          description: |
            ${{ env.IMAGE_NAME }}:${{ matrix.build }}
            ${{ env.IMAGE_NAME }}:${{ env.APP_VER }}
